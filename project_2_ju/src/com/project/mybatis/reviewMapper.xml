<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="review">
	
	<!-- (동적 검색)조건 선택하여 리뷰 목록 조회 -->
	<select id="one" parameterType="map" resultType="com.mystudy.model.vo.listTotVO">
		SELECT RV_NO, NO, MV_TITLE, MV_POSTER
		     , RV_NICK, RV_RATE, RV_TITLE, RV_CONTENT
		     , RV_CONTENT, RV_DATE, RV_REC, RV_WARN
		FROM (SELECT ROWNUM R_NUM, R.*, M.*
		      FROM (SELECT *
		            FROM REVIEW
		            ORDER BY RV_NO DESC
		            ) R, MOVIE M
		      WHERE R.MV_NO = M.MV_NO
		<choose>
     		<when test = "idx == 0">
		      AND MV_TITLE = #{keyword}
     		</when>
     		<when test = "idx == 1">
		      AND RV_NICK = #{keyword}
     		</when>
     		<when test = "idx == 2">
		      AND TO_CHAR(RV_DATE, 'YYYYMMDD') = #{keyword}
     		</when>
     		<otherwise>
			  AND 1 = 2
			</otherwise>
     	</choose>
	<![CDATA[
		      AND ROWNUM <= #{end}
		      )
    WHERE R_NUM >= #{begin}
	]]>
    </select>

	<!-- (동적 검색)카테고리별 리뷰 건수 조회 -->
	<select id="cnt" parameterType="map" resultType="int">
		SELECT COUNT(*) AS CNT 
		FROM REVIEW R, MOVIE M
		WHERE R.MV_NO = M.MV_NO
		<choose>
     		<when test = "idx == 0">
		     	AND M.MV_TITLE = #{keyword}
     		</when>
     		<when test = "idx == 1">
		     	AND R.RV_NICK = #{keyword}
     		</when>
     		<when test = "idx == 2">
		     	AND TO_CHAR(R.RV_DATE, 'YYYYMMDD') = #{keyword}
     		</when>
     		<otherwise>
				AND 1 = 2
			</otherwise>
     	</choose>
	</select>
	
	<!-- 영화번호로 리뷰vo 조회 -->
	<select id="mvNoReview" parameterType="map" resultType="com.mystudy.model.vo.reviewVO">
		SELECT R.*
		FROM REVIEW R, MOVIE M
		WHERE R.MV_NO = M.MV_NO
		AND R.MV_NO = #{mvNO}
		AND R.RV_NO = #{rvNo}
		ORDER BY R.RV_NO DESC
	</select>
	
	<!-- 리뷰 전체 건수 -->
	<select id="totalCnt" resultType="int">
		SELECT COUNT(*) AS CNT FROM REVIEW
	</select>
	
	<!-- 리뷰 전체 목록 조회 -->
	<select id="all" resultType="com.mystudy.model.vo.reviewVO">
		SELECT M.*, R.*
		FROM REVIEW R, MOVIE M
		WHERE R.MV_NO = M.MV_NO
		ORDER BY R.RV_NO DESC
	</select>

 	<!-- 페이지에 해당하는 리뷰 조회 -->
<!--	
	<select id="pageList" parameterType="map" resultType="com.mystudy.model.vo.reviewVO">
	<![CDATA[
		SELECT *
		FROM (SELECT ROWNUM R_NUM, R.*
		      FROM (SELECT *
		            FROM REVIEW
		            ORDER BY RV_NO DESC
		            ) R
		      WHERE ROWNUM <= #{end}
		      )
		WHERE R_NUM >= #{begin}
	]]>	
	</select> -->
	
	<!-- 리뷰 작성(INSERT) -->
	<insert id="insert" parameterType="com.mystudy.model.vo.reviewVO">
		INSERT INTO REVIEW
	    	(RV_NO, MV_NO, NO, RV_NICK, RV_TITLE, 
	     	 RV_CONTENT, RV_DATE, RV_REC, RV_RATE, RV_WARN)
		VALUES (REVIEW_SEQ.NEXTVAL, #{mvNo}, #{no}, #{rvNick}, #{rvTitle}, 
				#{rvContent}, SYSDATE, #{rvRec}, #{rvRate}, #{rvWarn})
	</insert>
	
	<!-- 리뷰 수정(UPDATE) -->
	<update id="update" parameterType="com.mystudy.model.vo.reviewVO">
		UPDATE REVIEW
		SET RV_RATE = #{rvRate},
		    RV_TITLE = #{rvTitle},
		    RV_CONTENT = #{rvContent}
		WHERE RV_NO = #{rvNo}
	</update>
	
	<!-- 리뷰 삭제(DELETE)  -->
	<delete id="delete" parameterType="int">
		DELETE REVIEW
		WHERE RV_NO = #{rvNo}
	</delete>
	
	<!-- 리뷰 1건 조회 -->
	<select id="rvOne" parameterType="int" resultType="com.mystudy.model.vo.reviewVO">
		SELECT *
		FROM REVIEW
		WHERE RV_NO = #{rvNo}
	</select>
	
	<!-- 추천수 -->
 	<update id="rec" parameterType="map">
		UPDATE REVIEW
		SET RV_REC = RV_REC + 1
		WHERE RV_NO = #{rvNo}
		AND NO != #{no}
	</update> 
	
	<!-- 리뷰 RvNo 조회 -->
	
	
	<!-- 마이페이지 나의 리뷰 조회 -->
	<select id="getReviewByNo" parameterType="int" resultType="com.mystudy.model.vo.reviewVO">
		SELECT *
		FROM REVIEW
		WHERE NO = #{no}
	</select>
	
	<!-- 리뷰번호 받아서 리뷰 삭제 -->
	<delete id="deleteMypage" parameterType="com.mystudy.model.vo.reviewVO">
		DELETE FROM REVIEW
		WHERE RV_NO = #{rvNo}
	</delete>
	<update id="updateNickReview" parameterType="map">
		UPDATE REVIEW
		SET RV_NICK = #{nick}
		WHERE NO = #{no}
	</update>
	
</mapper>